  // babel-plugin-transform-async-to-generator v6.24.1

  // babel-plugin-transform-es2015-destructuring v6.23.0

  // @babel/plugin-transform-block-scoping v7.14.2

  // @babel/plugin-transform-arrow-functions v7.13.0

var openingTitle = (function () {
  var _ref2 = _asyncToGenerator(function* ($, utils) {
    var openingH1 = $.openingH1,
      runningCheetah = $.runningCheetah,
      openingContainer = $.openingContainer;
    var str = "CHEETS";

    for (var i = 0; i < str.length; i++) {
      yield utils.delay(150);
      openingH1.textContent += str[i];
    }

    runningCheetah.style.opacity = 1;
    runningCheetah.style.width = "200px";
    yield utils.delay(2000);
    openingContainer.style.opacity = 0;
    yield utils.delay(500);
    openingContainer.remove();
    yield utils.delay(100);
  });

  return function openingTitle(_x, _x2) {
    return _ref2.apply(this, arguments);
  };
})();

var mainView = (function () {
  var _ref3 = _asyncToGenerator(function* ($, utils) {
    var mainContainer = $.mainContainer,
      cheetsImg = $.cheetsImg,
      mainH1 = $.mainH1,
      mainH2 = $.mainH2,
      mainH3 = $.mainH3,
      mainDiscordIcon = $.mainDiscordIcon;
    mainContainer.classList.remove("hidden");
    yield utils.delay(500);
    cheetsImg.style.opacity = 1;
    yield utils.delay(500);
    cheetsImg.style.filter = "drop-shadow(-42px 10px 4px #6d396d7a)";
    yield utils.delay(500);
    var heading1 = "Hey I'm Cheets!";

    for (var i = 0; i < heading1.length; i++) {
      yield utils.delay(75);
      mainH1.textContent += heading1[i];
    }

    yield utils.delay(300);
    var heading2 = "I'm a baker and I make VRChat avatars.";

    for (var _i = 0; _i < heading2.length; _i++) {
      yield utils.delay(75);
      mainH2.textContent += heading2[_i];
    }

    yield utils.delay(300);
    var heading3 = "Find me on discord!";

    for (var _i2 = 0; _i2 < heading3.length; _i2++) {
      yield utils.delay(75);
      mainH3.textContent += heading3[_i2];
    }

    yield utils.delay(500);
    mainDiscordIcon.style.opacity = 1;
  });

  return function mainView(_x3, _x4) {
    return _ref3.apply(this, arguments);
  };
})();

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}

_asyncToGenerator(function* () {
  var utils = {
    delay: function (time) {
      return new Promise(function (resolve) {
        return setTimeout(resolve, time);
      });
    },
  };
  var $ = {
    openingContainer: document.querySelector(".opening-container"),
    openingH1: document.querySelector(".opening-container h1"),
    runningCheetah: document.querySelector("img.running-cheetah"),
    mainContainer: document.querySelector("main"),
    cheetsImg: document.querySelector("main .cheets"),
    mainH1: document.querySelector("main > div > h1"),
    mainH2: document.querySelector("main > div > h2"),
    mainH3: document.querySelector("main > div > h3"),
    mainDiscordIcon: document.querySelector("main > div > img.discord-icon"),
  };
  document.body.addEventListener("click", function (e) {
    e.preventDefault();
    party.confetti(e);
  });
  document.body.addEventListener("contextmenu", function (e) {
    e.preventDefault();
    party.sparkles(e);
  });
  yield openingTitle($, utils);
  yield mainView($, utils);
})();
